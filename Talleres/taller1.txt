Ejercicio 1:

Tabla authors:

create table authors(
	au_id varchar(11) not Null,
	au_lname varchar(40) not Null,
	au_fname varchar(20) not Null default ('unknown'),
	phone char(12) not Null,
	adress varchar(40) Null,
	city varchar(20) Null,
	state char(2) Null,
	zip char(5) Null,
	contract bit not Null
	primary key(au_id),
	au_id like '[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]',
	zip like '[0-9][0-9][0-9][0-9][0-9]'
)

CREATE TABLE [dbo].[authors](
 [au_id] [dbo].[id] NOT NULL,
 [au_lname] [varchar](40) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
 [au_fname] [varchar](20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
 [phone] [char](12) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT ('UNKNOWN'),
 [address] [varchar](40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [city] [varchar](20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [state] [char](2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [zip] [char](5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [contract] [bit] NOT NULL,
 CONSTRAINT [UPKCL_auidind] PRIMARY KEY CLUSTERED 
(
 [au_id] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[authors]  WITH CHECK ADD CHECK  (([au_id] like '[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]'))
GO
ALTER TABLE [dbo].[authors]  WITH CHECK ADD CHECK  (([zip] like '[0-9][0-9][0-9][0-9][0-9]'))

Tabla title:

CREATE TABLE [dbo].[titles](
 [title_id] [dbo].[tid] NOT NULL,
 [title] [varchar](80) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
 [type] [char](12) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT ('UNDECIDED'),
 [pub_id] [char](4) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [price] [money] NULL,
 [advance] [money] NULL,
 [royalty] [int] NULL,
 [ytd_sales] [int] NULL,
 [notes] [varchar](200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [pubdate] [datetime] NOT NULL DEFAULT (getdate()),
 CONSTRAINT [UPKCL_titleidind] PRIMARY KEY CLUSTERED 
(
 [title_id] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[titles]  WITH CHECK ADD FOREIGN KEY([pub_id])
REFERENCES [dbo].[publishers] ([pub_id])

Ejercicio 2:

select au_lname, au_fname, title
from dbo.authors as a,dbo.titleauthor as ta, dbo.titles as t
where a.au_id = ta.au_id and t.title_id = ta.title_id

Ejercicio 3:

select * from dbo.authors
where state = 'CA' and au_fname not like 'M%'

Ejercicio 4:

Insert into dbo.authors values(
 '696-69-6969','pepito','pepe','324 324-2345','rivadavia','Quilmes','BA','19793',1)

Insert into dbo.publishers values(
 '9928','pepe','quilmes','LA','Argentina')

Insert into dbo.pub_info values(
 '9928',NULL,NULL)

Insert into dbo.titles values(
 'JD2934','LIBRO','cooking','9928',23.99,10000,10,214,'none','1991-06-12 00:00:00.000')

Insert into dbo.titleauthor values(
 '696-69-6969','JD2934',2,32)

Ejercicio 5:
select type as Tipo, sum(qty) as Vendidos, year(s.ord_date) as AÃ±o from dbo.titles t 
	inner join dbo.sales s 
	on t.title_id = s.title_id 
group by t.type, year(s.ord_date)

Ejercicio 6:
select t.type as tipo, avg(t.price) as promedio, count(1) as cantidad 
from dbo.titles as t
where t.price is not null
group by t.type

Ejercicio 7:
select avg(3*price) from dbo.titles

Ejercicio 8:
select sto.stor_name as StoreName, t.cantidad, t.promedio from dbo.stores as sto inner join
	(select  st.stor_id, sum(sl.qty) as cantidad, avg(sl.qty) as promedio from dbo.sales as sl, dbo.stores as st
	where sl.stor_id = st.stor_id
	group by st.stor_id
	) t
on sto.stor_id = t.stor_id

Ejercicio 10:
select max (t.job_lvl) from(
	select count (e.job_lvl) as job_lvl from dbo.employee e
	group by e.job_lvl) t

Ejercicio 12:
select p.pub_name as pub_name, t.pub_id as pubId, t.type as category
from dbo.titles t 
inner join dbo.publishers as p
on p.pub_id = t.pub_id) as t
where category = 'business'
group by t.pub_name


select p.pub_name
from dbo.publishers p inner join dbo.titles t
on p.pub_id = t.pub_id and t.type = 'business'
group by p.pub_name

Ejercicio 14:

select p.pub_name as pubName
 from dbo.publishers p 
  inner join dbo.employee e
  on  e.pub_id = p.pub_id
 where e.hire_date = (select min(e.hire_date) as hireDate from dbo.employee e

Ejericio 21:
select t.job_id as jobID
from (select e.job_id, e.pub_id from dbo.employee as e 
group by e.job_id, e.pub_id) t
group by t.job_id
having count(1) = (select count(1) from dbo.publishers)




